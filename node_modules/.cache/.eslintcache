[{"/Users/mayankjain/Documents/docs/src/index.js":"1","/Users/mayankjain/Documents/docs/src/reportWebVitals.js":"2","/Users/mayankjain/Documents/docs/src/App.js":"3","/Users/mayankjain/Documents/docs/src/Emoji.js":"4","/Users/mayankjain/Documents/docs/src/Signoff.js":"5","/Users/mayankjain/Documents/docs/src/header.js":"6","/Users/mayankjain/Documents/docs/src/Checkbox.js":"7","/Users/mayankjain/Documents/docs/src/Discussion.js":"8","/Users/mayankjain/Documents/docs/src/assigned.js":"9","/Users/mayankjain/Documents/docs/src/Event.js":"10","/Users/mayankjain/Documents/docs/src/clock.js":"11","/Users/mayankjain/Documents/docs/src/ComponentPicker.js":"12","/Users/mayankjain/Documents/docs/src/Agenda.js":"13","/Users/mayankjain/Documents/docs/src/FakeInput.js":"14"},{"size":500,"mtime":1620330983343,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1620330983344,"results":"17","hashOfConfig":"16"},{"size":10971,"mtime":1622753293749,"results":"18","hashOfConfig":"16"},{"size":917,"mtime":1621282731906,"results":"19","hashOfConfig":"16"},{"size":1320,"mtime":1622750358518,"results":"20","hashOfConfig":"16"},{"size":1478,"mtime":1622752222098,"results":"21","hashOfConfig":"16"},{"size":1263,"mtime":1621909627786,"results":"22","hashOfConfig":"16"},{"size":1430,"mtime":1621282684826,"results":"23","hashOfConfig":"16"},{"size":555,"mtime":1620713545628,"results":"24","hashOfConfig":"16"},{"size":349,"mtime":1621282743032,"results":"25","hashOfConfig":"16"},{"size":1151,"mtime":1620940847923,"results":"26","hashOfConfig":"16"},{"size":1730,"mtime":1622144920281,"results":"27","hashOfConfig":"16"},{"size":563,"mtime":1620945645964,"results":"28","hashOfConfig":"16"},{"size":1473,"mtime":1621288471784,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"yq8aey",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/mayankjain/Documents/docs/src/index.js",[],["65","66"],"/Users/mayankjain/Documents/docs/src/reportWebVitals.js",[],"/Users/mayankjain/Documents/docs/src/App.js",["67","68","69"],"import './App.css';\nimport Header from './header.js';\nimport ComponentPicker from './ComponentPicker';\nimport FakeInput from './FakeInput';\nimport { useEffect, useState } from 'react';\n\nexport const rootDomain =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:5000/'\n    : 'https://limitless-sierra-24357.herokuapp.com/'\n\nexport const ACCOUNTS = {\n  \"vee@reddit.com\" : {\n    email: \"mjmayank@gmail.com\",\n    name: \"Vaibhav Sahgal\",\n  },\n  \"kd@reddit.com\" : {\n    email: \"mjmayank@gmail.com\",\n    name: \"KD Bhulani\",\n  },\n  \"yee@reddit.com\" : {\n    email: \"mjmayank@gmail.com\",\n    name: \"Yee Chen\",\n  },\n  \"arjunb023@gmail.com\" : {\n    email: \"arjunb023@gmail.com\",\n    name: \"Arjun Bhargava\",\n  },\n  \"cayley@reddit.com\" : {\n    email: \"mjmayank@gmail.com\",\n    name: \"Cayley Larimer\",\n  },\n  \"mjmayank@gmail.com\" : {\n    email: \"mjmayank@gmail.com\",\n    name: \"Mayank Jain\",\n  }\n}\n\n// Client ID and API key from the Developer Console\nvar CLIENT_ID = '73937624438-b70smv6ui0j29m29akdjv3vg36oh0htf.apps.googleusercontent.com'\nvar API_KEY = 'AIzaSyDttxQZEswvFpB56MN7J7dbxMqzQvi2Oxk';\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = ['https://docs.googleapis.com/$discovery/rest?version=v1'];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = \"https://www.googleapis.com/auth/documents\";\n\n// const document_data = [\n//   { \n//     text: \"[Spec] Follower Notifs\",\n//     type: \"h1\",\n//   },\n//   {\n//     text: \"Action Items\",\n//     type: \"h2\",\n//   },\n//   {\n//     text: \"Chat with community team\",\n//     type: \"check\",\n//   },\n//   {\n//     text: \"Overview\",\n//     type: \"h2\",\n//   },\n//   {\n//     text: \"We are planning to launch a new notification when you get a new follower. The purpose of this is so that you are alerted when you get a new follower, and to create a viral experience where more and more people discover the follower feature\",\n//     type: \"p\",\n//   },\n//   {\n//     text: \"User Messaging/Announcements\",\n//     type: \"h2\",\n//   },\n//   {\n//     text: \"Title: New Follower Notifications Launching Next Week\",\n//     type: \"p\",\n//   },\n//   {\n//     text: \"Posted in: r/changlog\",\n//     type: \"p\",\n//   },\n//   {\n//     text: \"When: 5/17/2021\",\n//     type: \"p\",\n//   },\n//   {\n//     text: \"By: u/mjmayank\",\n//     type: \"p\",\n//   },\n//   {\n//     text: \"Hey everyone! Just wanted to let you know about a new launch that's coming up. We're launching follower notifs! Let us know in the comments if you have any feedack\",\n//     type: \"p\",\n//   },\n//   {\n//     text: \"Megan Murray\",\n//     type: \"request\",\n//   },\n//   {\n//     text: \"👍\",\n//     type: 'emoji',\n//     data: 2,\n//   },\n//   {\n//     text: \"Discussion\",\n//     type: \"h2\",\n//   },\n//   {\n//     text: \"What should we do if subreddits blackout?\",\n//     type: \"discussion\",\n//   },\n//   {\n//     text: \"Signoff\",\n//     type: \"h2\",\n//   },\n//   {\n//     text: \"Mayank Jain\",\n//     type: \"signoff\",\n//   },\n//   {\n//     text: \"Arjun Bhargava\",\n//     type: \"signoff\",\n//   }\n// ]\n\nconst document_data = [\n  {\n    text: \"Growth Roadmap Review: 10:30am-11:30am\",\n    type: \"event\",\n  },\n  { \n    text: \"Growth Roadmap Review\",\n    type: \"h1\",\n  },\n  {\n    text: \"Agenda\",\n    type: \"h2\",\n  },\n  // {\n  //   type: 'agenda',\n  //   data: [\n  //     {\n  //       text: \"Roadmap Study Hall - 15 minutes\",\n  //       type: \"p\",\n  //     },\n  //     {\n  //       text: \"Roadmap Discussion - 20 minutes\",\n  //       type: \"p\",\n  //     },\n  //     {\n  //       text: \"Backlog Review - 20 minutes\",\n  //       type: \"p\",\n  //     }\n  //   ]\n  // },\n  {\n    text: \"Follow Ups\",\n    type: \"h2\",\n  },\n  {\n    text: \"\",\n    type: \"check\",\n  },\n  {\n    text: \"Roadmap\",\n    type: \"h2\",\n  },\n  {\n    text: \"Channels\",\n    type: \"p\",\n  },\n  {\n    text: \"Rose Liu\",\n    type: \"request\",\n  },\n  {\n    text: \"👍\",\n    type: 'emoji',\n    data: [],\n  },\n  {\n    text: \"Core Growth\",\n    type: \"p\",\n  },\n  {\n    text: \"Mike Jiao\",\n    type: \"request\",\n  },\n  {\n    text: \"👍\",\n    type: 'emoji',\n    data: [],\n  },\n  {\n    text: \"International\",\n    type: \"p\",\n  },\n  {\n    text: \"Jason Lee\",\n    type: \"request\",\n  },\n  {\n    text: \"👍\",\n    type: 'emoji',\n    data: [],\n  },\n  {\n    text: \"SEO\",\n    type: \"p\",\n  },\n  {\n    text: \"Chuck Kao\",\n    type: \"request\",\n  },\n  {\n    text: \"👍\",\n    type: 'emoji',\n    data: [],\n  },\n  {\n    text: \"Key Discussion\",\n    type: \"h2\",\n  },\n  {\n    text: \"Can we do anything to accelerate subreddit notifications?\",\n    type: \"discussion\",\n  },\n  {\n    text: \"Action Items\",\n    type: \"h2\",\n  },\n  {\n    text: \"\",\n    type: \"check\",\n  },\n  {\n    text: \"Signoff\",\n    type: \"h2\",\n  },\n  {\n    text: \"KD Bhulani\",\n    type: \"signoff\",\n  },\n  {\n    text: \"Vee Sahgal\",\n    type: \"signoff\",\n  },\n  {\n    text: \"Yee Chen\",\n    type: \"signoff\",\n  }\n]\n\nfunction App() {\n  const [document, setDocument] = useState(document_data);\n  const [inputValue, setInputValue] = useState('');\n  const [isBackendAuthed, setIsBackendAuthed] = useState(null);\n  const [documentId, setDocumentId] = useState('');\n\n  useEffect(() => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    setDocumentId(params.get('docId'));\n  }, [])\n\n  const updateDocument = value => {\n    if (value === '/check') {\n      setDocument([...document, {\n        text: \"\",\n        type: \"check\"\n      }]);\n      setInputValue('')\n    } else {\n      setInputValue(value)\n    }\n  }\n\n  const removeItem = index => {\n    document.splice(index, 1);\n    setDocument([...document]);\n  }\n\n  const onEnterPressed = key => {\n    if (inputValue === '') {\n      if (key === 'Backspace') {\n        document.pop();\n        setDocument([...document])\n      }\n    }\n    if (key === 'Enter') {\n      if (inputValue.includes('/request')) {\n        setDocument([\n          ...document, {\n            text: inputValue.substring(inputValue.indexOf(\"/request \") + \"/request \".length),\n            type: \"request\"\n          }\n        ])\n        setInputValue('')\n      }\n      else if (inputValue.includes('/signoff')) {\n        const inputEmail = inputValue.substring(inputValue.indexOf(\"/signoff \") + \"/signoff \".length, inputValue.length-1);\n        console.log(inputEmail)\n        console.log(ACCOUNTS[inputEmail])\n        const email = ACCOUNTS[inputEmail].email;\n        const name = ACCOUNTS[inputEmail].name;\n        setDocument([\n          ...document, {\n            text: name,\n            type: \"signoff\"\n          }\n        ])\n        setInputValue('')\n        fetch(\n          `${rootDomain}send/review?email=${email}`\n        )\n      }\n      else if (inputValue.includes('/discussion')) {\n        setDocument([\n          ...document, {\n            text: inputValue.substring(inputValue.indexOf(\"/discussion \") + \"/discussion \".length),\n            type: \"discussion\"\n          }\n        ])\n        setInputValue('')\n      }\n      else if (inputValue.includes('/emoji')) {\n        setDocument([\n          ...document, {\n            text: inputValue.substring(inputValue.indexOf(\"/emoji \") + \"/emoji \".length) || \"👍\",\n            type: \"emoji\",\n            data: 0,\n          }\n        ])\n        setInputValue('')\n      }\n      else if (inputValue.includes('/h1')) {\n        setDocument([\n          ...document, {\n            text: inputValue.substring(inputValue.indexOf(\"/h1 \") + \"/h1 \".length),\n            type: \"h1\",\n          }\n        ])\n        setInputValue('')\n      }\n      else if (inputValue.includes('/h2')) {\n        setDocument([\n          ...document, {\n            text: inputValue.substring(inputValue.indexOf(\"/h2 \") + \"/h2 \".length),\n            type: \"h2\",\n          }\n        ])\n        setInputValue('')\n      }\n      else if (inputValue.includes('/p')) {\n        setDocument([\n          ...document, {\n            text: inputValue.substring(inputValue.indexOf(\"/p \") + \"/p \".length),\n            type: \"p\",\n          }\n        ])\n        setInputValue('')\n      }\n      else {\n        setDocument([\n          ...document, {\n            text: inputValue,\n            type: \"p\",\n          }\n        ])\n        setInputValue('')\n      }\n    }\n  }\n\n  const gapi = window.gapi;\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  function handleClientLoad() {\n    gapi.load('client:auth2', initClient);\n  }\n\n  /**\n       *  Initializes the API client library and sets up sign-in state\n       *  listeners.\n       */\n  async function initClient() {\n    var auth2; // The Sign-In object.\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function() {\n      console.log('initialized gapi')\n      gapi.auth2.getAuthInstance().isSignedIn.listen((isSignIn) => {\n        if (isSignIn) {\n          var body = {\n            idToken: window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token,\n          }\n          fetch(`${rootDomain}checkRegistration`, {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(response => {\n            if (response.ok) {\n              setIsBackendAuthed(true)\n            } else {\n              setIsBackendAuthed(false)\n              // window.location.replace(`${rootDomain}/signin`);\n            }\n          })\n        }\n      })\n\n      if(!gapi.auth2.getAuthInstance().isSignedIn.get()){\n        gapi.auth2.getAuthInstance().signIn();\n      } else {\n        var body = {\n          idToken: window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token,\n        }\n        fetch(`${rootDomain}checkRegistration`, {\n          method: 'POST',\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          if (response.ok) {\n            setIsBackendAuthed(true)\n          } else {\n            setIsBackendAuthed(false)\n            // window.location.replace(`${rootDomain}/signin`);\n          }\n        })\n      }\n    });\n  }\n\n  useEffect(handleClientLoad, []);\n\n  return (\n    <div className=\"App\">\n      <Header documentData={ document } isBackendAuthed={isBackendAuthed}/>\n      <div className=\"doc-container\">\n        {\n          document.map((line, index) => {\n            return <ComponentPicker line={line} removeItem={() => removeItem(index)}/>\n          })\n        }\n        <FakeInput\n          value={ inputValue }\n          className=\"fake-input\"\n          updateDocument={ value => updateDocument(value) }\n          onEnterPressed={ key => onEnterPressed(key) }\n        />\n        <a href=\"https://docs.google.com/document/d/1M3erMHjZqOhPhs_SnrceyZK4KqqBarFaxhFlQ0vdKGo/edit#\" className=\"footer\">\n          View autogenerated Google Doc\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mayankjain/Documents/docs/src/Emoji.js",[],"/Users/mayankjain/Documents/docs/src/Signoff.js",["70","71","72"],"/Users/mayankjain/Documents/docs/src/header.js",[],"/Users/mayankjain/Documents/docs/src/Checkbox.js",["73"],"import './checkbox.css';\nimport CheckboxBG from './checkbox-bg.png';\nimport { useState } from 'react';\nimport debounce from 'lodash.debounce'\n\nfunction Checkbox(props) {\n  const [ isChecked, setIsChecked ] = useState(false);\n  const [ isEmpty, setIsEmpty ] = useState(true);\n  const [ isSynced, setIsSynced ] = useState(false);\n\n  const waitForInput = () => {\n    setIsSynced(true);\n    setTimeout(() => setIsSynced(false), 5000)\n  }\n\n  const debouncedInput = debounce(waitForInput, 1000)\n\n  return (\n    <div>\n      {\n        isChecked\n        ? <button style={{ backgroundImage: `url(${CheckboxBG})` }} className=\"checkbox checkbox-on\" onClick={ () => setIsChecked(!isChecked) }></button>\n        : <button className=\"checkbox checkbox-off\" onClick={ () => setIsChecked(!isChecked) }></button>\n      }\n      <span\n        contentEditable=\"true\"\n        onInput={ () => {\n          setIsEmpty(false);\n          debouncedInput();\n        } }\n        suppressContentEditableWarning={true}\n        className={ `checkbox-text doc-block ${ isEmpty ? 'empty' : ''}` }\n      >\n          {props.text}\n      </span>\n      {\n        isSynced && <a href=\"#\" className=\"helper-text asana-helper\">Created an Asana task!</a>\n      }\n    </div>\n  );\n}\n\nexport default Checkbox;","/Users/mayankjain/Documents/docs/src/Discussion.js",["74","75","76"],"import './discussion.css';\nimport { useState } from 'react';\nimport Avatar1 from './Slice_1.png';\n\nfunction Emoji(props) {\n  const [ isReplying, setIsReplying ] = useState(false);\n\n  return (\n    <div className=\"discussion\">\n      <div className=\"question\">{ props.text }</div>\n      <div><a onClick={ () => setIsReplying(true) } className=\"reply-button\">Reply</a></div>\n      {\n        isReplying &&\n        <div className=\"reply\">\n          <div className=\"reply-flex\">\n            <div className=\"author-header\">\n              <img src={ Avatar1 } alt=\"avatar\"/>\n              <div className=\"author-name\">Mayank</div>\n            </div>\n            <input autoFocus className=\"doc-block reply-input\"/>\n          </div>\n          <div className=\"helper-text\">We'll automatically notify people of your reply via email</div>\n          <a href=\"#\" className=\"reply-button\">Reply</a>\n        </div>\n      }\n      <div className=\"reply\">\n        <div className=\"reply-flex\">\n          <div className=\"author-header\">\n            <img src={ Avatar1 } alt=\"avatar\"/>\n            <div className=\"author-name\">Mayank</div>\n          </div>\n          <div contentEditable suppressContentEditableWarning={true} className=\" doc-block reply-input\">I think just wait a week, I bet they'll be over it really fast</div>\n        </div>\n        <a href=\"#\" className=\"reply-button\">Reply</a>\n      </div>\n    </div>\n  );\n}\n\nexport default Emoji;","/Users/mayankjain/Documents/docs/src/assigned.js",["77"],"import './assigned.css';\nimport EmailIcon from './email-icon.png';\nimport { useState } from 'react';\n\nfunction Emoji(props) {\n  const [ isChecked, setIsChecked ] = useState(false);\n\n  return (\n    <div className=\"assigned\">\n      {\n        isChecked\n        ? <input autoFocus className=\"fake-input\"/>\n        : <button className=\"input-requested\" onClick={ () => setIsChecked(!isChecked) }>\n            Input requested from {props.from} <img className=\"email-icon\" src={ EmailIcon } />\n          </button>\n      }\n    </div>\n  );\n}\n\nexport default Emoji;","/Users/mayankjain/Documents/docs/src/Event.js",["78"],"import './event.css';\nimport CalendarIcon from './calendar.png';\n\nfunction Event(props) {\n  return (\n    <div className=\"event-container\">\n      <img src={ CalendarIcon } alt=\"calendar\" />\n      <div className=\"event\">{ props.text }</div>\n      <a href=\"#\" className=\"join-meeting-button\">Join Video Call</a>\n    </div>\n  );\n}\n\nexport default Event;","/Users/mayankjain/Documents/docs/src/clock.js",["79"],"import './event.css';\nimport { useEffect, useState } from 'react';\n\nfunction Clock(props) {\n  const [ minutes, setMinutes ] = useState('0');\n  const [ seconds, setSeconds ] = useState('0');\n  const [ deadline, setDeadline ] = useState(new Date(Date.parse(new Date()) + 15 * 60 * 1000));\n\n  const getTimeRemaining = (endtime) => {\n    const total = Date.parse(endtime) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    \n    return {\n      total,\n      minutes,\n      seconds\n    };\n  }\n  \n  useEffect(() => {\n    function updateClock() {\n      const t = getTimeRemaining(deadline);\n\n      setMinutes(('0' + t.minutes).slice(-2));\n      setSeconds(('0' + t.seconds).slice(-2));\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    const timeinterval = setInterval(updateClock, 1000);\n  })\n\n  return (\n    <div className=\"clock-container\">\n      <div className=\"clock-digit clock-minutes\">{ minutes }</div>\n      <div className=\"clock-digit clock-seconds\">{ seconds }</div>\n    </div>\n  );\n}\n\nexport default Clock;","/Users/mayankjain/Documents/docs/src/ComponentPicker.js",[],"/Users/mayankjain/Documents/docs/src/Agenda.js",[],"/Users/mayankjain/Documents/docs/src/FakeInput.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":258,"column":10,"nodeType":"86","messageId":"87","endLine":258,"endColumn":20},{"ruleId":"84","severity":1,"message":"88","line":389,"column":9,"nodeType":"86","messageId":"87","endLine":389,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":443,"column":31,"nodeType":"91","endLine":443,"endColumn":33,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"93","line":11,"column":11,"nodeType":"86","messageId":"87","endLine":11,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":18,"column":7,"nodeType":"96","endLine":18,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":18,"column":7,"nodeType":"96","endLine":18,"endColumn":26},{"ruleId":"97","severity":1,"message":"99","line":37,"column":21,"nodeType":"96","endLine":37,"endColumn":70},{"ruleId":"97","severity":1,"message":"98","line":11,"column":12,"nodeType":"96","endLine":11,"endColumn":78},{"ruleId":"97","severity":1,"message":"99","line":23,"column":11,"nodeType":"96","endLine":23,"endColumn":48},{"ruleId":"97","severity":1,"message":"99","line":34,"column":9,"nodeType":"96","endLine":34,"endColumn":46},{"ruleId":"100","severity":1,"message":"101","line":14,"column":47,"nodeType":"96","endLine":14,"endColumn":95},{"ruleId":"97","severity":1,"message":"99","line":9,"column":7,"nodeType":"96","endLine":9,"endColumn":51},{"ruleId":"84","severity":1,"message":"102","line":7,"column":21,"nodeType":"86","messageId":"87","endLine":7,"endColumn":32},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'documentId' is assigned a value but never used.","Identifier","unusedVar","'auth2' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gapi' and 'initClient'. Either include them or remove the dependency array.","ArrayExpression",["105"],"'response' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setDeadline' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [gapi, initClient]",{"range":"108","text":"109"},[10201,10203],"[gapi, initClient]"]